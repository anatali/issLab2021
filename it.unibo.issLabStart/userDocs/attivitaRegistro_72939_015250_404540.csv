"Data";"Ora";"Minuti";"Argomenti";"Durata (min.)";"Luogo";"Tenuto da altri"
"22/02/2022";"09";"00";"Introduzione al corso";"180";"Lab2";""
"24/02/2022";"12";"00";"Valutazione finale.Costruire software";"120";"Lab2";""
"01/03/2022";"09";"00";"Costruire software: Indicazioni sul processo di produzione.Il primo caso di studio:RadarSystem";"180";"Lab2";""
"03/03/2022";"12";"00";"WorkspaceSetup. Primi esperimenti su RaspberryPi ";"120";"Lab2";""
"08/03/2022";"09";"00";"Possibili strategie per la soluzione del requisito ledAlarm: modifica/specializzazione/estensione di codice esistente, copia di codice e modifica della copia, composizione delle parti (pipe): si veda Se non fosse distribuito ….Discussione sulle diverse strategie e delle soluzioni inviate da alcuni studenti.Analisi del problema RadarSystemPresentazione di primi possibili prodotti della analisi del problema RadarSystem:definizione delle interfacce per i componenti (intesi come DigitalTwins)impostazione di una Architettura logica del sistema (si veda architettura logica)";"180";"Lab2";""
"10/03/2022";"12";"00";"Impostazione del progetto it.unibo.radarSystem22.domainDefinizione di un piano di lavoro che include l'idea di implementare:dispositivi mock e concreti,piani di testing e test units,enabler di comunicazione,oggetti standard per la comunicazione.Sprint1: progettazione e sviluppo dei componenti del dominio.Il LedMock e una sua TestUnit.Il LedModel come classe astratta che viene specializzata da LedMock e LedConcrete.DeviceFactory e file di configurazione DomainSystemConfig.json.Discussione su come impostare un SonarMock che implementa l'interfaccia ISonar.";"120";"Lab2";""
"15/03/2022";"09";"00";"Completamento dello Sprint1:Il SonarMock come specializzazione di una classe astratta SonarModel e una sua TestUnit.Il SonarConcrete come componente che riusa il core-code Sonar.c.Sprint1: Un primo prototipo: il RadarSystem con dispositivi simulati in ambiente locale e un suo (integration)Test.Deployment e sperimentazione RadarSystem con dispositivi simulati sul RaspberryPi.Sperimentazione del RadarSystem con dispositivi concreti sul RaspberryPi.";"180";"Lab2";""
"17/03/2022";"12";"00";"Costruzione di un supporto alle comunicazioni basato su TCP: il progetto it.unibo.comm2022.Uso del supporto per realizzare due diverse configurazioni del RadarSystem:Sprint2: Dispostivi e Controller su RaspberryPi | RadarDisplay su PCSprint2a: Dispostivi su RaspberryPi | Contoller + RadarDisplay su PC";"120";"Lab2";""
"22/03/2022";"09";"00";"Lezione non tenuta per Lauree. Ricevimento studenti online.";"0";"Lab2";""
"24/03/2022";"12";"00";"Aggiunta del protocollo UDP nel progetto it.unibo.comm2022Problema: accendere/spegnere il Led su RaspberryPi usando TCP o UDP e un programma Python (con Jupyter)Sprint3: Abilitatori di comunicazioneIntroduzione al concetto di contesto";"120";"Lab2";""
"29/03/2022";"09";"00";"Sperimentazione in Lab2 del sistema distribuito prodotto nello Sprint3Sprint3 review: verso un unico server per nodo computazionaleSprint4: Il concetto di contesto e la sua implementazione: i messaggi strutturatiRefactoring del sistema utilizzando un contesto su RaspberryPi";"180";"Lab2";""
"31/03/2022";"12";"00";"Sperimentazione in Lab2 del sistema distribuito prodotto nello Sprint4:osservazione del numero di Thread creati nel RadarSystem su RaspberryPirichiami sul funzionamento di Node.jsl'operazione prepareReply per la creazione di rispostel'invio di richieste 'in parallelo' (entro thread)l'uso di un Contatore con delayProposta del progetto SonarObservableSprint4 review: dai POJO agli attori";"120";"Lab2";""
"05/04/2022";"09";"00";"Introduzione agli Attori.Discussione sul caso di studio SonarObservable";"180";"Lab2";""
"07/04/2022";"12";"00";"Sistemi distribuiti ad attori.Il problema della univocità dei nomi degli attori: discussione su olismo (vs. riduzionismo) come premessa del passaggio alla analisi e alla progettazione topo-down.Revisione del caso di studio SonarObservable.Introduzione al concetto di risorsa osservabile come emettitore di informazione (evento) resa percepibile dal contesto.";"120";"Lab2";""
"12/04/2022";"09";"00";"Il SonarObservable come attore che emette eventi.Eventi come messaggi senza esplicito destinatario: dal concetto alla implementazione. Osservatori di eventi come elementi di testing.Richiami sull'uso di annotazioni in Java.Introduzione all'uso dei robot virtuali e reali. Il VirtualRobot in ambiente WEnv.";"180";"Lab2";""
"14/04/2022";"12";"00";"Festività  pasquali";"0";"Lab2";""
"19/04/2022";"09";"00";"Festività pasquali";"0";"Lab2";""
"21/04/2022";"12";"00";"Uso del VirtualRobot in ambiente WEnv mediante HTTP e WebSocket.Realizzazione di Interaction2021 per HTTP e WS.La classe WsConnectionForActors.";"120";"Lab2";""
"26/04/2022";"09";"00";"Actor22: Considerazioni sul lavoro svolto e su quello ancora da compiere.Annotazioni per la descrizione di sistemi distribuiti ad attori. MainAnnotationDemo22Pc e MainAnnotationDemo22RaspSistemi descritti mediante annotazioni: esempi con WEnv: ActorWithObserverUsingWEnv - un attore che percorre il boundary della stanza.Reimpostazione del funzionamento dell'attore precedente come automa stati finiti: ActorWithFsmBasic.Attori come automi a stati finiti di Moore: la classe QakActor22Fsm.Refactoring del RobotBoundaryWalker come specializzazione di QakActor22Fsm.Il problema RobotCleaner: prima discussione sulla analisi dei requisiti e del problema";"180";"Lab2";""
"28/04/2022";"12";"00";"Breve discussione sulla autovalutazione della analisi del RobotCleanerCompletamento del RobotBoundaryWalker come specializzazione di QakActor22FsmAnnotazioni per definire stati e transizioni di un automa di Moore: la classe QakActor22FsmBoundaryWalker: refactoring usando le annotazioni per gli stati e le transizioniBoundaryWalker con eventi di allarme (fireEvent) e di fine allarme (endAlarm)RobotCleaner: un prototipo dopo l'analisi del problema.Il ruolo e i vantaggi di un approccio top-down che produce un modello eseguibile del sistemaWorkTodo: RobotCleaner con comandi di start/stop/resume. Due casi:dopo uno stop si ferma e riprende dopo resumedopo uno stop torna a HOME e dopo resume riprende dal punto in cui è stato interotto";"120";"Lab2";""
"03/05/2022";"09";"00";"RobotCleaner con comandi di start/stop/resume: dall'analisi al prototipoUna prima Web User Interface con SpringBoot: uso del prottotipo in una archittetura clean";"180";"Lab2";""
"05/05/2022";"12";"00";"RobotCleaner: dall'analisi al progetto.RobotCleaner: comandi start/stopEsempio di impostazione del lavoro e degli elaborati, anche in vista della prova finaleIl problema dell'aggiornamento asincrono della pagina con lo stato del robot e del mondo";"120";"Lab2";""
"10/05/2022";"09";"00";"Una WebConsole per il RobotCleaner: input area e DisplayArea.Uso delle WebSocket in Spring.Il problema dell'aggiornamento della DisplayArea da parte di un componente che non deve conoscere la GUI.Attori come risorse CoAP.Return to HOME: il problema del percorso e della posizione del robot.Introduzione all'uso di un pianificatore di movimenti in un'area rettangolare piana.";"180";"Lab2";""
"12/05/2022";"12";"00";"Esempi di uso del pianificatore.Esempi di applicazioni che usano il pianificatore: SpiralWalker, RobotMapperBoudary e RobotUsingMapIntroduzione all'uso del linguaggio custom qak per la definizione di modelli eseguibili";"120";"Lab2";""
"17/05/2022";"09";"00";"Fase3: Introduzione al metamodello QAk con infrastruttura basata su Kotlin";"180";"Lab2";""
"19/05/2022";"12";"00";"Una prima applicazione: il modello basicrobot.qak nel progetto unibo.basicRobot22Costruzione collettiva di un modello QAK del basicrobot come prodotto della analisi del problema";"120";"Lab2";""
"24/05/2022";"09";"00";"Versione 1.2.5 dei plugin it.unibo.QactorkStartUp di progetti usando solo Gradle (Valastro-Marchegiani)Approfondimenti sull'uso del metamodello QAk:CodedQActorDal locale al distribuito: callersExternalQactorSistemi che crescono attorno a risorseProgetto unibo.basicRobot22: dalla analisi, alla distribuzione (su docker) e all'uso";"180";"Lab2";""
"26/05/2022";"12";"00";"Il rulo dei modelli eseguibili nello sviluppo agile del software. Progetto passo-passo di un robot che determina la mappa di una stanza, passando da linguaggio naturale a un modello (mapperqak22.qak) espresso mediante il linguaggio QAk.";"120";"Lab2";""
"31/05/2022";"09";"00";"Introduzione all'uso di Kotlin";"180";"Lab2";""
"02/06/2022";"12";"00";"Festività ";"0";"Lab2";""
"07/06/2022";"09";"00";"Plugin versione 1.2.6 (settings.gradle)Attori Kotlin e il loro uso nel supporto al linguaggio QAkIl RadarSystem in un approccio di sviluppo top-down basato su modelliOverview sul lavoro svolto durante il corsoRaccolta delle opinioni degli studentiSperimentazione di uso di robot fisiciPresentazione del tema finale";"180";"Lab2";""
