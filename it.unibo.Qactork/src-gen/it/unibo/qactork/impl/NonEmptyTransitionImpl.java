/**
 * generated by Xtext 2.22.0
 */
package it.unibo.qactork.impl;

import it.unibo.qactork.EmptyTransition;
import it.unibo.qactork.InputTransition;
import it.unibo.qactork.NonEmptyTransition;
import it.unibo.qactork.QactorkPackage;
import it.unibo.qactork.Timeout;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Non Empty Transition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.unibo.qactork.impl.NonEmptyTransitionImpl#getName <em>Name</em>}</li>
 *   <li>{@link it.unibo.qactork.impl.NonEmptyTransitionImpl#getDuration <em>Duration</em>}</li>
 *   <li>{@link it.unibo.qactork.impl.NonEmptyTransitionImpl#getTrans <em>Trans</em>}</li>
 *   <li>{@link it.unibo.qactork.impl.NonEmptyTransitionImpl#getElseempty <em>Elseempty</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NonEmptyTransitionImpl extends TransitionImpl implements NonEmptyTransition
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getDuration() <em>Duration</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDuration()
   * @generated
   * @ordered
   */
  protected Timeout duration;

  /**
   * The cached value of the '{@link #getTrans() <em>Trans</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTrans()
   * @generated
   * @ordered
   */
  protected EList<InputTransition> trans;

  /**
   * The cached value of the '{@link #getElseempty() <em>Elseempty</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getElseempty()
   * @generated
   * @ordered
   */
  protected EmptyTransition elseempty;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NonEmptyTransitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return QactorkPackage.Literals.NON_EMPTY_TRANSITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QactorkPackage.NON_EMPTY_TRANSITION__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Timeout getDuration()
  {
    return duration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDuration(Timeout newDuration, NotificationChain msgs)
  {
    Timeout oldDuration = duration;
    duration = newDuration;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QactorkPackage.NON_EMPTY_TRANSITION__DURATION, oldDuration, newDuration);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDuration(Timeout newDuration)
  {
    if (newDuration != duration)
    {
      NotificationChain msgs = null;
      if (duration != null)
        msgs = ((InternalEObject)duration).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QactorkPackage.NON_EMPTY_TRANSITION__DURATION, null, msgs);
      if (newDuration != null)
        msgs = ((InternalEObject)newDuration).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QactorkPackage.NON_EMPTY_TRANSITION__DURATION, null, msgs);
      msgs = basicSetDuration(newDuration, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QactorkPackage.NON_EMPTY_TRANSITION__DURATION, newDuration, newDuration));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<InputTransition> getTrans()
  {
    if (trans == null)
    {
      trans = new EObjectContainmentEList<InputTransition>(InputTransition.class, this, QactorkPackage.NON_EMPTY_TRANSITION__TRANS);
    }
    return trans;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EmptyTransition getElseempty()
  {
    return elseempty;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetElseempty(EmptyTransition newElseempty, NotificationChain msgs)
  {
    EmptyTransition oldElseempty = elseempty;
    elseempty = newElseempty;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QactorkPackage.NON_EMPTY_TRANSITION__ELSEEMPTY, oldElseempty, newElseempty);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setElseempty(EmptyTransition newElseempty)
  {
    if (newElseempty != elseempty)
    {
      NotificationChain msgs = null;
      if (elseempty != null)
        msgs = ((InternalEObject)elseempty).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QactorkPackage.NON_EMPTY_TRANSITION__ELSEEMPTY, null, msgs);
      if (newElseempty != null)
        msgs = ((InternalEObject)newElseempty).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QactorkPackage.NON_EMPTY_TRANSITION__ELSEEMPTY, null, msgs);
      msgs = basicSetElseempty(newElseempty, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QactorkPackage.NON_EMPTY_TRANSITION__ELSEEMPTY, newElseempty, newElseempty));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case QactorkPackage.NON_EMPTY_TRANSITION__DURATION:
        return basicSetDuration(null, msgs);
      case QactorkPackage.NON_EMPTY_TRANSITION__TRANS:
        return ((InternalEList<?>)getTrans()).basicRemove(otherEnd, msgs);
      case QactorkPackage.NON_EMPTY_TRANSITION__ELSEEMPTY:
        return basicSetElseempty(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case QactorkPackage.NON_EMPTY_TRANSITION__NAME:
        return getName();
      case QactorkPackage.NON_EMPTY_TRANSITION__DURATION:
        return getDuration();
      case QactorkPackage.NON_EMPTY_TRANSITION__TRANS:
        return getTrans();
      case QactorkPackage.NON_EMPTY_TRANSITION__ELSEEMPTY:
        return getElseempty();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case QactorkPackage.NON_EMPTY_TRANSITION__NAME:
        setName((String)newValue);
        return;
      case QactorkPackage.NON_EMPTY_TRANSITION__DURATION:
        setDuration((Timeout)newValue);
        return;
      case QactorkPackage.NON_EMPTY_TRANSITION__TRANS:
        getTrans().clear();
        getTrans().addAll((Collection<? extends InputTransition>)newValue);
        return;
      case QactorkPackage.NON_EMPTY_TRANSITION__ELSEEMPTY:
        setElseempty((EmptyTransition)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case QactorkPackage.NON_EMPTY_TRANSITION__NAME:
        setName(NAME_EDEFAULT);
        return;
      case QactorkPackage.NON_EMPTY_TRANSITION__DURATION:
        setDuration((Timeout)null);
        return;
      case QactorkPackage.NON_EMPTY_TRANSITION__TRANS:
        getTrans().clear();
        return;
      case QactorkPackage.NON_EMPTY_TRANSITION__ELSEEMPTY:
        setElseempty((EmptyTransition)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case QactorkPackage.NON_EMPTY_TRANSITION__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case QactorkPackage.NON_EMPTY_TRANSITION__DURATION:
        return duration != null;
      case QactorkPackage.NON_EMPTY_TRANSITION__TRANS:
        return trans != null && !trans.isEmpty();
      case QactorkPackage.NON_EMPTY_TRANSITION__ELSEEMPTY:
        return elseempty != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //NonEmptyTransitionImpl
