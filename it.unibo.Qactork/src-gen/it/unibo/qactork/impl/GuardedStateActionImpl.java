/**
 * generated by Xtext 2.22.0
 */
package it.unibo.qactork.impl;

import it.unibo.qactork.AnyAction;
import it.unibo.qactork.GuardedStateAction;
import it.unibo.qactork.QactorkPackage;
import it.unibo.qactork.StateAction;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Guarded State Action</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link it.unibo.qactork.impl.GuardedStateActionImpl#getGuard <em>Guard</em>}</li>
 *   <li>{@link it.unibo.qactork.impl.GuardedStateActionImpl#getOkactions <em>Okactions</em>}</li>
 *   <li>{@link it.unibo.qactork.impl.GuardedStateActionImpl#getKoactions <em>Koactions</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GuardedStateActionImpl extends StateActionImpl implements GuardedStateAction
{
  /**
   * The cached value of the '{@link #getGuard() <em>Guard</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGuard()
   * @generated
   * @ordered
   */
  protected AnyAction guard;

  /**
   * The cached value of the '{@link #getOkactions() <em>Okactions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOkactions()
   * @generated
   * @ordered
   */
  protected EList<StateAction> okactions;

  /**
   * The cached value of the '{@link #getKoactions() <em>Koactions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getKoactions()
   * @generated
   * @ordered
   */
  protected EList<StateAction> koactions;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GuardedStateActionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return QactorkPackage.Literals.GUARDED_STATE_ACTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AnyAction getGuard()
  {
    return guard;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetGuard(AnyAction newGuard, NotificationChain msgs)
  {
    AnyAction oldGuard = guard;
    guard = newGuard;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, QactorkPackage.GUARDED_STATE_ACTION__GUARD, oldGuard, newGuard);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGuard(AnyAction newGuard)
  {
    if (newGuard != guard)
    {
      NotificationChain msgs = null;
      if (guard != null)
        msgs = ((InternalEObject)guard).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - QactorkPackage.GUARDED_STATE_ACTION__GUARD, null, msgs);
      if (newGuard != null)
        msgs = ((InternalEObject)newGuard).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - QactorkPackage.GUARDED_STATE_ACTION__GUARD, null, msgs);
      msgs = basicSetGuard(newGuard, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, QactorkPackage.GUARDED_STATE_ACTION__GUARD, newGuard, newGuard));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<StateAction> getOkactions()
  {
    if (okactions == null)
    {
      okactions = new EObjectContainmentEList<StateAction>(StateAction.class, this, QactorkPackage.GUARDED_STATE_ACTION__OKACTIONS);
    }
    return okactions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<StateAction> getKoactions()
  {
    if (koactions == null)
    {
      koactions = new EObjectContainmentEList<StateAction>(StateAction.class, this, QactorkPackage.GUARDED_STATE_ACTION__KOACTIONS);
    }
    return koactions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case QactorkPackage.GUARDED_STATE_ACTION__GUARD:
        return basicSetGuard(null, msgs);
      case QactorkPackage.GUARDED_STATE_ACTION__OKACTIONS:
        return ((InternalEList<?>)getOkactions()).basicRemove(otherEnd, msgs);
      case QactorkPackage.GUARDED_STATE_ACTION__KOACTIONS:
        return ((InternalEList<?>)getKoactions()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case QactorkPackage.GUARDED_STATE_ACTION__GUARD:
        return getGuard();
      case QactorkPackage.GUARDED_STATE_ACTION__OKACTIONS:
        return getOkactions();
      case QactorkPackage.GUARDED_STATE_ACTION__KOACTIONS:
        return getKoactions();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case QactorkPackage.GUARDED_STATE_ACTION__GUARD:
        setGuard((AnyAction)newValue);
        return;
      case QactorkPackage.GUARDED_STATE_ACTION__OKACTIONS:
        getOkactions().clear();
        getOkactions().addAll((Collection<? extends StateAction>)newValue);
        return;
      case QactorkPackage.GUARDED_STATE_ACTION__KOACTIONS:
        getKoactions().clear();
        getKoactions().addAll((Collection<? extends StateAction>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case QactorkPackage.GUARDED_STATE_ACTION__GUARD:
        setGuard((AnyAction)null);
        return;
      case QactorkPackage.GUARDED_STATE_ACTION__OKACTIONS:
        getOkactions().clear();
        return;
      case QactorkPackage.GUARDED_STATE_ACTION__KOACTIONS:
        getKoactions().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case QactorkPackage.GUARDED_STATE_ACTION__GUARD:
        return guard != null;
      case QactorkPackage.GUARDED_STATE_ACTION__OKACTIONS:
        return okactions != null && !okactions.isEmpty();
      case QactorkPackage.GUARDED_STATE_ACTION__KOACTIONS:
        return koactions != null && !koactions.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //GuardedStateActionImpl
