/* Generated by AN DISI Unibo */ 
package it.unibo.actor0

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Actor0 ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	@kotlinx.coroutines.ObsoleteCoroutinesApi
				
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						 
							//val ActorRes = itunibo.coapintro.qak.resourceActor("actor0",myself) 
						itunibo.coapintro.qak.coapserverforctx.start(  )
						itunibo.coapintro.qak.coapserverforctx.add(myself)
					}
				}	 
			}
		}
}
